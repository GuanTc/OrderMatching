<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.trade.mapper.TradeMapper" >
  <resultMap id="BaseResultMap" type="com.demo.trade.pojo.Trade" >
    <id column="trade_id" property="tradeId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="stock_id" property="stockId" jdbcType="BIGINT" />
    <result column="buy_order_id" property="buyOrderId" jdbcType="BIGINT" />
    <result column="sell_order_id" property="sellOrderId" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="qty" property="qty" jdbcType="INTEGER" />
    <result column="trade_date" property="tradeDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    trade_id, user_id, stock_id, buy_order_id, sell_order_id, price, qty, trade_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.demo.trade.pojo.TradeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from trade
    where trade_id = #{tradeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from trade
    where trade_id = #{tradeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.trade.pojo.TradeExample" >
    delete from trade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.trade.pojo.Trade" >
    insert into trade (trade_id, user_id, stock_id, 
      buy_order_id, sell_order_id, price, 
      qty, trade_date)
    values (#{tradeId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{stockId,jdbcType=BIGINT}, 
      #{buyOrderId,jdbcType=BIGINT}, #{sellOrderId,jdbcType=BIGINT}, #{price,jdbcType=REAL}, 
      #{qty,jdbcType=INTEGER}, #{tradeDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.trade.pojo.Trade" >
    insert into trade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tradeId != null" >
        trade_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="stockId != null" >
        stock_id,
      </if>
      <if test="buyOrderId != null" >
        buy_order_id,
      </if>
      <if test="sellOrderId != null" >
        sell_order_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="qty != null" >
        qty,
      </if>
      <if test="tradeDate != null" >
        trade_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tradeId != null" >
        #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="stockId != null" >
        #{stockId,jdbcType=BIGINT},
      </if>
      <if test="buyOrderId != null" >
        #{buyOrderId,jdbcType=BIGINT},
      </if>
      <if test="sellOrderId != null" >
        #{sellOrderId,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="qty != null" >
        #{qty,jdbcType=INTEGER},
      </if>
      <if test="tradeDate != null" >
        #{tradeDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.trade.pojo.TradeExample" resultType="java.lang.Integer" >
    select count(*) from trade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update trade
    <set >
      <if test="record.tradeId != null" >
        trade_id = #{record.tradeId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.stockId != null" >
        stock_id = #{record.stockId,jdbcType=BIGINT},
      </if>
      <if test="record.buyOrderId != null" >
        buy_order_id = #{record.buyOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.sellOrderId != null" >
        sell_order_id = #{record.sellOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.qty != null" >
        qty = #{record.qty,jdbcType=INTEGER},
      </if>
      <if test="record.tradeDate != null" >
        trade_date = #{record.tradeDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update trade
    set trade_id = #{record.tradeId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      stock_id = #{record.stockId,jdbcType=BIGINT},
      buy_order_id = #{record.buyOrderId,jdbcType=BIGINT},
      sell_order_id = #{record.sellOrderId,jdbcType=BIGINT},
      price = #{record.price,jdbcType=REAL},
      qty = #{record.qty,jdbcType=INTEGER},
      trade_date = #{record.tradeDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.trade.pojo.Trade" >
    update trade
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="stockId != null" >
        stock_id = #{stockId,jdbcType=BIGINT},
      </if>
      <if test="buyOrderId != null" >
        buy_order_id = #{buyOrderId,jdbcType=BIGINT},
      </if>
      <if test="sellOrderId != null" >
        sell_order_id = #{sellOrderId,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="qty != null" >
        qty = #{qty,jdbcType=INTEGER},
      </if>
      <if test="tradeDate != null" >
        trade_date = #{tradeDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where trade_id = #{tradeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.trade.pojo.Trade" >
    update trade
    set user_id = #{userId,jdbcType=BIGINT},
      stock_id = #{stockId,jdbcType=BIGINT},
      buy_order_id = #{buyOrderId,jdbcType=BIGINT},
      sell_order_id = #{sellOrderId,jdbcType=BIGINT},
      price = #{price,jdbcType=REAL},
      qty = #{qty,jdbcType=INTEGER},
      trade_date = #{tradeDate,jdbcType=TIMESTAMP}
    where trade_id = #{tradeId,jdbcType=BIGINT}
  </update>

  <select id="findAll" resultMap="BaseResultMap">
    select  * from trade
  </select>
</mapper>