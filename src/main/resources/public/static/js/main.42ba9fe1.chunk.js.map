{"version":3,"sources":["home/logo.png","login/login.js","register/register.js","orderBook/orderBook.js","orderBook/orderList.js","Trade/Trade.js","home/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","rememberMe","showLoginSuccess","props","messageManager","showSuccessMessage","displayTime","fieldName","event","_this$setState","setState","defineProperty","target","value","concat","checked","self","history","data","URLSearchParams","append","axios","method","url","then","response","console","log","status","userName","userId","push","pathname","alert","msg","catch","error","react_default","a","createElement","className","Typography","color","variant","align","TextField","onChange","handleChange","bind","label","margin","autoFocus","fullWidth","required","type","FormGroup","FormControlLabel","control","Checkbox","handleRememberMeCheck","Button","style","onClick","handleLogin","marginLeft","handleRegister","Component","injectMessageManager","Register","name","item","showErrorMessage","handleReset","OrderBook","buyOrderBook","sellOrderBook","stockList","willMatchBobId","willMatchSobId","selectStock","query","get","sort","compare","stock_Id","sortBy","b","value1","value2","result","JSON","parse","bobId","sobId","id","_this2","marginRight","build_default","onMessage","handleData","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","map","stock","key","selected","stockName","stockCode","buy_price","sell_price","colSpan","filter","o","stockId","order","buySize","buyPrice","askPrice","askSize","tableIcons","Add","forwardRef","ref","AddBox_default","assign","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","OrderList","userMap","stockMap","getColumn","title","field","lookup","B","S","MKT","LMT","STP","MIT","LIT","editable","0","1","Day","GTC","2","3","4","5","dist_default","icons","height","columns","onRowAdd","newData","Promise","resolve","setTimeout","toConsumableArray","objectSpread","onRowDelete","oldData","splice","indexOf","options","filtering","sorting","headerStyle","fontSize","fontWeight","Trade","tradeList","trade","tradeId","buyname","sellname","price","qty","tradeDate","Home","tabValue","open","onClose","action","onOpen","location","login_login","src","logo","onLogout","padding","Tabs","centered","Tab","orderBook_orderBook","orderList","src_Trade_Trade","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","danger","red","mixins","toolbar","minHeight","typography","button","textTransform","App","MuiThemeProvider","Router","createBrowserHistory","Switch","Route","exact","path","component","Redirect","from","to","Boolean","window","hostname","match","ReactDOM","render","bundle","desktopView","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42ba9fe1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f5304037.png\";","import React, {Component} from 'react';\r\nimport './login.css';\r\nimport axios from 'axios';\r\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\r\nimport TextField from \"@material-ui/core/es/TextField/TextField\";\r\nimport FormGroup from \"@material-ui/core/es/FormGroup/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/es/FormControlLabel/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/es/Checkbox/Checkbox\";\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\nimport {injectMessageManager} from \"react-message-manager\";\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        rememberMe: true,\r\n    };\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    showLoginSuccess = () => {\r\n        const { messageManager } = this.props;\r\n        messageManager.showSuccessMessage('Log in Success.', {\r\n            displayTime: 5000, //defaults to 2000\r\n        });\r\n    };\r\n\r\n\r\n    handleChange(fieldName: string, event: any) {\r\n        this.setState({\r\n            [fieldName]: event.target.value,\r\n            [`${fieldName}Error`]: false,\r\n        });\r\n    }\r\n\r\n    handleRememberMeCheck(event: any) {\r\n        this.setState({\r\n            rememberMe: event.target.checked\r\n        });\r\n    }\r\n\r\n    handleLogin() {\r\n        if (!this.state.username || !this.state.password) {\r\n            return;\r\n        }\r\n        const self = this;\r\n        let history = this.props.history;\r\n        let data = new URLSearchParams();\r\n        data.append('username', this.state.username);\r\n        data.append('password', this.state.password);\r\n        axios({\r\n            method: 'post',\r\n            url: '/user/login',\r\n            data: data\r\n        })\r\n            .then(function (response) {\r\n                console.log('response: ', response.data.data);\r\n                if (response.data.status === 'SUCCESS') {\r\n                    self.showLoginSuccess();\r\n                    const userName = response.data.data.username;\r\n                    const userId = response.data.data.userId;\r\n                    history.push({pathname:'/',  state: { userName: userName, userId:userId }});\r\n                } else {\r\n                    alert(response.data.msg);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('error: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    handleRegister() {\r\n        let history = this.props.history\r\n        history.push('/register');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"content\">\r\n                    <Typography className=\"loginText\" color=\"primary\" variant=\"h2\" align=\"center\">Login</Typography>\r\n                    <TextField\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange.bind(this, 'username')}\r\n                        label=\"Please input your username\"\r\n                        margin=\"normal\"\r\n                        autoFocus\r\n                        fullWidth\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange.bind(this, 'password')}\r\n                        label=\"Please input your password\"\r\n                        type=\"password\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n                    <div className=\"minHeight\"/>\r\n                    <div className=\"hide\">\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={this.state.rememberMe}\r\n                                        onChange={this.handleRememberMeCheck.bind(this)}\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remeber me\"\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"footer\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            style={{ color: \"white\" }}\r\n                            onClick={this.handleLogin.bind(this)}\r\n                            className=\"logFoot\"\r\n                        >\r\n                            Log in\r\n                        </Button>\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            style={{ marginLeft: '50px',color: \"white\" }}\r\n                            onClick={this.handleRegister.bind(this)}\r\n                            className=\"logFoot\"\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default injectMessageManager(Login);","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\r\nimport TextField from \"@material-ui/core/es/TextField/TextField\";\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\n\r\nclass Register extends Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        name: '',\r\n    };\r\n\r\n    handleChange(fieldName: string, event: any) {\r\n        this.setState({\r\n            [fieldName]: event.target.value,\r\n            [`${fieldName}Error`]: false,\r\n        });\r\n    }\r\n\r\n    handleRegister = (item) => {\r\n        if (!this.state.username || !this.state.password) {\r\n            return;\r\n        }\r\n        let history = this.props.history;\r\n        let data = new URLSearchParams();\r\n        data.append('username', this.state.username);\r\n        data.append('password', this.state.password);\r\n        data.append('name', this.state.name);\r\n        axios({\r\n            method: 'post',\r\n            url: '/user/register',\r\n            data: data\r\n        })\r\n            .then(function (response) {\r\n                console.log('response: ', response.data);\r\n                const { messageManager } = this.props;\r\n                if (response.data.status === 'SUCCESS') {\r\n                    messageManager.showSuccessMessage(response.data.msg + 'Please login.', {\r\n                        displayTime: 5000, //defaults to 2000\r\n                    });\r\n                    history.push('/login');\r\n                } else {\r\n                    messageManager.showErrorMessage(response.data.msg, {\r\n                        displayTime: 5000, //defaults to 2000\r\n                    });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('error: ', error);\r\n            });\r\n    };\r\n\r\n    handleReset = (item) => {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            name: ''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"content\">\r\n                    <Typography className=\"loginText\" color=\"primary\" variant=\"h2\" align=\"center\">Register</Typography>\r\n                    <TextField\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange.bind(this, 'username')}\r\n                        label=\"Please input your username\"\r\n                        margin=\"normal\"\r\n                        autoFocus\r\n                        fullWidth\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange.bind(this, 'password')}\r\n                        label=\"Please input your password\"\r\n                        type=\"password\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange.bind(this, 'name')}\r\n                        label=\"Please input your name\"\r\n                        type=\"name\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n                    <div className=\"minHeight\"/>\r\n                    <div className=\"footer\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            style={{ color: \"white\" }}\r\n                            onClick={this.handleRegister.bind(this)}\r\n                            className=\"logFoot\"\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            style={{ marginLeft: '50px',color: \"white\" }}\r\n                            onClick={this.handleReset.bind(this)}\r\n                            className=\"logFoot\"\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Register;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport s from './orderBook.css';\r\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\r\nimport Websocket from 'react-websocket';\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\n\r\n\r\nclass OrderBook extends Component {\r\n\r\n    state = {\r\n        buyOrderBook: [],\r\n        sellOrderBook: [],\r\n        stockList: [],\r\n        willMatchBobId: 0,\r\n        willMatchSobId: 0,\r\n        selectStock: 0,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.query();\r\n    }\r\n\r\n    query = () => {\r\n        axios.get('/buyOrderBook/findAll').then(response=>{\r\n            console.log(\"response.data\", response.data)\r\n            this.setState({\r\n                buyOrderBook: response.data.data.sort(this.compare(\"DESC\", 'buyPrice'))\r\n            });\r\n        });\r\n        axios.get('/sellOrderBook/findAll').then(response=>{\r\n            this.setState({\r\n                sellOrderBook: response.data.data.sort(this.compare(\"ASCE\", 'askPrice'))\r\n            });\r\n        });\r\n        axios.get('/stock/stockPrice').then(response=>{\r\n            console.log(\"response.data\", response.data)\r\n            this.setState({\r\n                stockList: response.data.data,\r\n                selectStock: response.data.data[0].stock_Id\r\n            });\r\n        });\r\n    };\r\n\r\n    compare(sortBy, event){\r\n        return function(a,b){\r\n            var value1 = a[event];\r\n            var value2 = b[event];\r\n            if (sortBy === \"DESC\") {\r\n                return value2 - value1;\r\n            } else if (sortBy === \"ASCE\") {\r\n                return value1 - value2;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleData(data) {\r\n        let result = JSON.parse(data);\r\n        console.log('result', result);\r\n        if(result.msg === \"Buy\") {\r\n            this.setState({\r\n                buyOrderBook: result.data.sort(this.compare(\"DESC\", 'buyPrice')),\r\n                willMatchBobId: -1\r\n            });\r\n        }\r\n        if(result.msg === \"Sell\") {\r\n            this.setState({\r\n                sellOrderBook: result.data.sort(this.compare(\"ASCE\", 'askPrice')),\r\n                willMatchSobId: -1\r\n            });\r\n        }\r\n        if(result.msg === \"left\") {\r\n            this.setState({\r\n                willMatchBobId: result.data.bobId\r\n            });\r\n        }\r\n        if(result.msg === \"right\") {\r\n            this.setState({\r\n                willMatchSobId: result.data.sobId\r\n            });\r\n        }\r\n    }\r\n\r\n    selectStock(id: number) {\r\n        this.setState({\r\n            selectStock: id,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"orderBookAll\" style={{ marginRight: \"20px\"}}>\r\n                <Websocket url='ws://localhost:8080/websocket'\r\n                           onMessage={this.handleData.bind(this)}/>\r\n                <Paper className=\"stockList\">\r\n                    <Typography className=\"orderText\" variant=\"h6\" align=\"center\">Stock List</Typography>\r\n                    <Table size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"right\">Stock</TableCell>\r\n                                <TableCell align=\"right\">Code</TableCell>\r\n                                <TableCell align=\"right\">Buy</TableCell>\r\n                                <TableCell align=\"right\">Sell</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.stockList.map(stock => (\r\n                                <TableRow\r\n                                    key={stock.stock_Id}\r\n                                    onClick={() => this.selectStock(stock.stock_Id)}\r\n                                    selected={stock.stock_Id === this.state.selectStock}\r\n                                >\r\n                                    <TableCell align=\"right\">{stock.stockName}</TableCell>\r\n                                    <TableCell align=\"right\">{stock.stockCode}</TableCell>\r\n                                    <TableCell align=\"right\">{stock.buy_price}</TableCell>\r\n                                    <TableCell align=\"right\">{stock.sell_price}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n                <Paper className=\"orderBookList\">\r\n                    <Typography className=\"orderText\" variant=\"h6\" align=\"center\">Order Book</Typography>\r\n                    <div className=\"table\">\r\n                        <Table size=\"small\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" colSpan={2}>Bid</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"right\">Qty</TableCell>\r\n                                    <TableCell align=\"right\">Price</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.buyOrderBook.filter(o => o.stockId === this.state.selectStock).map(order => (\r\n                                    <TableRow key={order.bobId} className={order.bobId === this.state.willMatchBobId ? \"willMatch\" : null}>\r\n                                        <TableCell align=\"right\">{order.buySize}</TableCell>\r\n                                        <TableCell align=\"right\">{order.buyPrice}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <Table size=\"small\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" colSpan={2}>Ask</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"right\">Price</TableCell>\r\n                                    <TableCell align=\"right\">Qty</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.sellOrderBook.filter(o => o.stockId === this.state.selectStock).map(order => (\r\n                                    <TableRow key={order.sobId}  className={order.sobId === this.state.willMatchSobId ? \"willMatch\" : null}>\r\n                                        <TableCell align=\"right\">{order.askPrice}</TableCell>\r\n                                        <TableCell align=\"right\">{order.askSize}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderBook;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './orderBook.css';\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport {forwardRef} from 'react';\r\n\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {injectMessageManager} from \"react-message-manager\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref}/>),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\r\n};\r\n\r\nclass OrderList extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        userMap: {},\r\n        stockMap: {}\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.query();\r\n        this.getColumn();\r\n    }\r\n\r\n    getColumn = () => {\r\n        const columns = [\r\n            {\r\n                title: 'User Name',\r\n                field: 'userId',\r\n                type: 'string',\r\n                lookup: this.state.userMap,\r\n            },\r\n            {\r\n                title: 'Stock Name',\r\n                field: 'stockId',\r\n                type: 'string',\r\n                lookup: this.state.stockMap,\r\n            },\r\n            {\r\n                title: 'Type',\r\n                field: 'type',\r\n                type: 'string',\r\n                lookup: {'B': 'Buy', 'S': 'Sell'},\r\n            },\r\n            {\r\n                title: 'Order Type',\r\n                field: 'orderType',\r\n                type: 'string',\r\n                lookup: {\r\n                    'MKT': 'Market Order',\r\n                    'LMT': 'Limit Order',\r\n                    'STP': 'Stop Order',\r\n                    'MIT': 'Market if Touched',\r\n                    'LIT': 'Limit if Touched'\r\n                },\r\n            },\r\n            {\r\n                title: 'Price',\r\n                field: 'price',\r\n                type: 'numeric',\r\n            },\r\n            {\r\n                title: 'Quantity',\r\n                field: 'qty',\r\n                type: 'numeric',\r\n            },\r\n            {\r\n                title: 'Remain Qty',\r\n                field: 'remainQty',\r\n                type: 'numeric',\r\n                editable: 'never',\r\n            },\r\n            {\r\n                title: 'Market Price',\r\n                field: 'marketPrice',\r\n                type: 'numeric',\r\n            },\r\n            {\r\n                title: 'Limit Price',\r\n                field: 'limitPrice',\r\n                type: 'numeric',\r\n            },\r\n            {\r\n                title: 'FOK',\r\n                field: 'fullOrKill',\r\n                type: 'numeric',\r\n                lookup: {0: 'Not FOK', 1: 'FOK'},\r\n            },\r\n            {\r\n                title: 'Duration',\r\n                field: 'duration',\r\n                type: 'string',\r\n                lookup: {'Day': 'DAY', 'GTC': 'GTC'},\r\n            },\r\n            {\r\n                title: 'Submit Date',\r\n                field: 'submitDate',\r\n                type: 'datetime',\r\n                editable: 'never',\r\n            },\r\n            {\r\n                title: 'Status',\r\n                field: 'status',\r\n                type: 'numeric',\r\n                editable: 'never',\r\n                lookup: {\r\n                    0: 'Not Submit',\r\n                    1: 'Submitted',\r\n                    2: 'Completed',\r\n                    3: 'User Cancelled',\r\n                    4: 'Over time',\r\n                    5: 'System Cancelled'\r\n                },\r\n            },\r\n        ];\r\n        return columns\r\n    };\r\n\r\n    query = () => {\r\n        axios.get('/Order/findAll').then(response => {\r\n            this.setState({\r\n                data: response.data.data\r\n            });\r\n        });\r\n        axios.get('/Order/findAllUser').then(response => {\r\n            this.setState({\r\n                userMap: JSON.parse(response.data.data)\r\n            });\r\n        });\r\n        axios.get('/stock/findAllStock').then(response => {\r\n            this.setState({\r\n                stockMap: JSON.parse(response.data.data)\r\n            });\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const self = this;\r\n        return (\r\n            <Paper className=\"listRoot\">\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    title=\"Order List\"\r\n                    id=\"materialTable\"\r\n                    style={{height: \"100%\"}}\r\n                    data={this.state.data}\r\n                    columns={this.getColumn()}\r\n                    editable={{\r\n                        onRowAdd: newData =>\r\n                            new Promise(resolve => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    const data = [...this.state.data];\r\n                                    data.push(newData);\r\n                                    this.setState({...this.state, data});\r\n                                    axios({\r\n                                        method: 'post',\r\n                                        url: '/Order/add',\r\n                                        data: newData\r\n                                    })\r\n                                        .then(function (response) {\r\n                                            console.log('response: ', response.data.msg);\r\n                                            if (response.data.msg !== \"Add Success\") {\r\n                                                alert(response.data.msg)\r\n                                            }\r\n                                        })\r\n                                        .catch(function (error) {\r\n                                            console.log('error: ', error);\r\n                                        });\r\n                                }, 600);\r\n                            }),\r\n                        onRowDelete: oldData =>\r\n                            new Promise(resolve => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                    const data = [...this.state.data];\r\n                                    data.splice(data.indexOf(oldData), 1);\r\n                                    this.setState({...this.state, data});\r\n                                }, 600);\r\n                            }),\r\n                    }}\r\n                    options={{\r\n                        filtering: true,\r\n                        sorting: true,\r\n                        // padding: 'dense',\r\n                        // headerStyle: {padding: '10px', fontSize: '0.8rem', fontWeight: 'bold'},\r\n                        headerStyle: {fontSize: '0.8rem', fontWeight: 'bold'},\r\n                    }}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default injectMessageManager(OrderList);","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './Trade.css';\r\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\r\n\r\n\r\nclass Trade extends Component {\r\n\r\n    state = {\r\n        tradeList: [],\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.query();\r\n    }\r\n\r\n    query = () => {\r\n        axios.get('/trade/findAll').then(response => {\r\n            console.log('tradeList', response.data.data)\r\n            this.setState({\r\n                tradeList: response.data.data\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Paper className=\"orderBook\">\r\n                <Typography className=\"orderText\" variant=\"h2\" align=\"center\">Trade</Typography>\r\n                <Table size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"right\">Stock Name</TableCell>\r\n                            <TableCell align=\"right\">Buy Name</TableCell>\r\n                            <TableCell align=\"right\">Sell Name</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                            <TableCell align=\"right\">Quantity</TableCell>\r\n                            <TableCell align=\"center\">Trade Date</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.tradeList.map(trade => (\r\n                            <TableRow key={trade.tradeId}>\r\n                                <TableCell align=\"right\">{trade.stockName}</TableCell>\r\n                                <TableCell align=\"right\">{trade.buyname}</TableCell>\r\n                                <TableCell align=\"right\">{trade.sellname}</TableCell>\r\n                                <TableCell align=\"right\">{trade.price}</TableCell>\r\n                                <TableCell align=\"right\">{trade.qty}</TableCell>\r\n                                <TableCell align=\"center\">{trade.tradeDate}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Trade;","import React, {Component} from 'react';\r\nimport './home.css';\r\nimport axios from 'axios';\r\nimport OrderBook from \"../orderBook/orderBook\";\r\nimport Tabs from \"@material-ui/core/es/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/es/Tab/Tab\";\r\nimport OrderList from \"../orderBook/orderList\";\r\nimport logo from './logo.png';\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\nimport Trade from \"../Trade/Trade\";\r\nimport cookie from \"react-cookie\";\r\nimport Login from '../login/login';\r\nimport Link from \"@material-ui/core/es/Link/Link\";\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        tabValue: 'order',\r\n        open: false,\r\n        userName: 'gtc',\r\n        userId: 0,\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.state.userId !== 0){\r\n            this.setState({\r\n                userId: this.props.location.state.userId\r\n            })\r\n        }\r\n    }\r\n\r\n    onClose = (action: string) => {\r\n        console.log(action);\r\n        this.setState({\r\n            open: false,\r\n        });\r\n    };\r\n\r\n    onOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        });\r\n    };\r\n\r\n    handleChange = (event, tabValue) => {\r\n        this.setState({tabValue});\r\n    };\r\n\r\n    onLogin(userId) {\r\n        // this.setState({ userId });\r\n        // cookie.save('userId', userId, { path: '/' });\r\n    }\r\n\r\n    onLogout() {\r\n        // cookie.remove('userId', { path: '/' });\r\n        this.setState({\r\n            userId: 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.userId === 0) {\r\n            return <Login />;\r\n        }\r\n        return (\r\n            <div className=\"all\">\r\n                <div className=\"user\">\r\n                    <img src={logo} className=\"img\"/>\r\n                    <div className=\"link\">\r\n                        <div className=\"welcome\">\r\n                            welcome, {this.props.location.state.userName}\r\n                        </div>\r\n                        <Button\r\n                            onClick={this.onLogout.bind(this)}\r\n                            style={{padding: \"6px 16px\"}}\r\n                        >\r\n                            logout\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Tabs\r\n                    value={this.state.tabValue || 'orderBook'}\r\n                    onChange={this.handleChange}\r\n                    // textColor=\"secondary\"\r\n                    // orientation='vertical'\r\n                    // indicatorColor=\"primary\"\r\n                    // textColor=\"primary\"\r\n                    centered\r\n                >\r\n                    <Tab label=\"Order\" value=\"order\"/>\r\n                    <Tab label=\"Trade\" value=\"trade\"/>\r\n                </Tabs>\r\n                {\r\n                    this.state.tabValue === 'order' &&\r\n                    <div className=\"orders\">\r\n                        <OrderBook/>\r\n                        <OrderList/>\r\n                    </div>\r\n                }\r\n                {this.state.tabValue === 'trade' && <Trade/>}\r\n                {/*<div>*/}\r\n                {/*<Button onClick={() => this.onOpen()} variant=\"contained\">点击我</Button>*/}\r\n                {/*<Dialog*/}\r\n                {/*open={this.state.open}*/}\r\n                {/*onClose={(action) => this.onClose(action)}*/}\r\n                {/*buttons={{*/}\r\n                {/*ok: {*/}\r\n                {/*color: 'secondary',*/}\r\n                {/*text: '确定',*/}\r\n                {/*className: 'ok',*/}\r\n                {/*disabled: false,*/}\r\n                {/*onClick: this.handleClick*/}\r\n                {/*},*/}\r\n                {/*cancel: {*/}\r\n                {/*text: '取消',*/}\r\n                {/*className: 'tt',*/}\r\n                {/*}*/}\r\n                {/*}}*/}\r\n                {/*>*/}\r\n                {/*<div>*/}\r\n                {/*<br />*/}\r\n                {/*<br />*/}\r\n                {/*<br />*/}\r\n                {/*<br />*/}\r\n                {/*666666666666666666666666666666666666666666666666*/}\r\n                {/*<br />*/}\r\n                {/*<br />*/}\r\n                {/*<br />*/}\r\n                {/*<br />*/}\r\n                {/*<br />*/}\r\n                {/*</div>*/}\r\n                {/*</Dialog>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\nimport Login from \"./login/login\";\nimport Register from \"./register/register\";\nimport {Route, Switch} from \"react-router\";\nimport { Router, Redirect} from \"react-router-dom\";\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport MuiThemeProvider from \"@material-ui/core/es/styles/MuiThemeProvider\";\nimport Home from \"./home/home\";\nimport {createBrowserHistory} from 'history';\nimport { injectMessageManager } from 'react-message-manager';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#5e69e8',\n            main: '#1f224b',\n            dark: '#002884',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#ff7961',\n            main: '#ec1f24',\n            dark: '#ba000d',\n            contrastText: '#000',\n        },\n    },\n    status: {\n        danger: red[900]\n    },\n    mixins: {\n        toolbar: {\n            minHeight: 48,\n        }\n    },\n    typography: {\n        button: {\n            fontSize: '1rem',\n            textTransform: 'none',\n        }\n    },\n});\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Router history={createBrowserHistory()}>\n                    <Switch>\n                        <Route exact path='/' component={Home}/>\n                        <Route path='/login' component={Login}/>\n                        <Route path='/register' component={Register}/>\n                        <Redirect from=\"/*\" to=\"/\" />\n                    </Switch>\n                </Router>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default injectMessageManager(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {MessageManagerProvider} from 'react-message-manager';\r\n\r\nReactDOM.render(\r\n    <MessageManagerProvider desktopView>\r\n        <App/>\r\n    </MessageManagerProvider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}